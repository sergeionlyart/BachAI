Проанализируйте заключения об проблемах проекта вашего начальника , устраните проблемы , приведите проект в соотвествие требованиям платформы OpenAi на текуший момент 

### Итоговый обзор

Сервис корректно организует валидацию изображений и базовую работу с Batch API, однако взаимодействие с OpenAI в ряде мест не соответствует актуальным требованиям платформы. Ниже перечислены ключевые проблемы и предложения по их устранению.

---

**1. Vision‑запросы при наличии изображений идут через `chat.completions` (модель gpt‑4o) вместо Responses API с o4‑mini**. Это нарушает требования Reasoning API и усложняет поддержку будущих обновлений платформы

Предлагаемая задачаПеревести обработку изображений на Responses API

Начать задачу

---

- *2. Перевод текстов выполняется моделью gpt‑4 через **`chat.completions`**, хотя по ТЗ требуется gpt‑4.1‑mini (Responses API)**

Предлагаемая задачаИспользовать gpt-4.1-mini через Responses API для перевода

Начать задачу

---

- *3. При загрузке JSONL в Batch API передаются только байты без имени файла, что может привести к ошибке (**`files.create`**)**

Предлагаемая задачаКорректно формировать файл для Batch API

---

**4. В `BatchProcessor.create_batch_job` формируются `translation_requests` с шаблоном `{{VISION_RESULT}}`, но они нигде не используются**

Предлагаемая задачаУдалить неиспользуемое построение translation_requests

---

- *5. Последовательный перевод всех языков в **`routes/api.py`** может превышать таймаут рабочего процесса и вызывать **`WORKER TIMEOUT`***

Предлагаемая задачаСнизить риск таймаута при переводе в sync-режиме

---

### Рекомендации по устранению ошибки **`WORKER TIMEOUT`**

- Оптимизировать последовательные запросы к OpenAI (см. пункт 5).
- Явно задавать таймауты сетевых вызовов и соответствующие параметры Gunicorn.
- Логировать промежуточные этапы (старт/окончание каждого запроса), чтобы быстрее выявлять зависания.

---

Основные трудности связаны с устаревшим использованием Chat Completions, потенциально неправильной загрузкой файлов в Batch API и отсутствием контроля времени выполнения. После перехода на Responses API и настройки тайм‑аутов сервис будет работать стабильнее, а интеграция будет соответствовать текущим требованиям OpenAI.

После внедрения указанных изменений сервис будет соответствовать требованиям OpenAI Batch/Reasoning API