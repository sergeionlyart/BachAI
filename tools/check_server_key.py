#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π SHARED_KEY –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ—Å—Ç–æ–≤—É—é –ø–æ–¥–ø–∏—Å—å
"""
import os
import hmac
import hashlib

def check_server_shared_key():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SHARED_KEY –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
    shared_key = os.environ.get('SHARED_KEY')
    
    if not shared_key:
        print("‚ùå SHARED_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return None
    
    print("‚úÖ SHARED_KEY —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    print(f"üìè –î–ª–∏–Ω–∞ –∫–ª—é—á–∞: {len(shared_key)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –ú–∞—Å–∫–∏—Ä—É–µ–º –∫–ª—é—á –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    if len(shared_key) > 8:
        masked_key = shared_key[:4] + "..." + shared_key[-4:]
    else:
        masked_key = shared_key[:2] + "..."
    
    print(f"üîí –ú–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á: {masked_key}")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–æ–¥–ø–∏—Å—å –¥–ª—è –ø—É—Å—Ç–æ–≥–æ payload
    test_signature = hmac.new(
        shared_key.encode(),
        "".encode(),
        hashlib.sha256
    ).hexdigest()
    
    print(f"üîê –¢–µ—Å—Ç–æ–≤–∞—è –ø–æ–¥–ø–∏—Å—å –¥–ª—è GET –∑–∞–ø—Ä–æ—Å–∞: {test_signature}")
    
    return shared_key

def generate_signature_for_client(shared_key, payload=""):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–¥–ø–∏—Å—å –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞"""
    if not shared_key:
        return None
        
    return hmac.new(
        shared_key.encode(),
        payload.encode(),
        hashlib.sha256
    ).hexdigest()

if __name__ == "__main__":
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–µ—Ä–≤–µ—Ä–∞")
    print("=" * 40)
    
    key = check_server_shared_key()
    
    if key:
        print("\nüìã –î–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤:")
        print("- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ—Ç –∂–µ SHARED_KEY, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
        print("- –î–ª—è GET –∑–∞–ø—Ä–æ—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—É—Å—Ç–æ–π payload ('')")
        print("- –î–ª—è POST –∑–∞–ø—Ä–æ—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ JSON —Å—Ç—Ä–æ–∫—É –∫–∞–∫ payload")
        
        print(f"\nüåê –ü—Ä–∏–º–µ—Ä curl –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:")
        signature = generate_signature_for_client(key, "")
        print(f"curl -H 'X-Signature: {signature}' http://localhost:5000/api/v1/batch-status/JOB_ID")
    else:
        print("\n‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å SHARED_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")