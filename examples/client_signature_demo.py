#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–∞–∫ –∫–ª–∏–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
"""
import os
import json
import hmac
import hashlib
import requests

# –í–∞—à —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ—Ç –∂–µ, —á—Ç–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
SHARED_KEY = "your-shared-key-here"  # –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –±–µ—Ä–µ—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

def generate_signature(payload: str, shared_key: str) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HMAC-SHA256 –ø–æ–¥–ø–∏—Å—å –¥–ª—è payload"""
    return hmac.new(
        shared_key.encode(),
        payload.encode() if isinstance(payload, str) else payload,
        hashlib.sha256
    ).hexdigest()

def make_authenticated_request(endpoint: str, method: str = "GET", data: dict = None):
    """–î–µ–ª–∞–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ API"""
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º payload
    if data:
        payload = json.dumps(data, separators=(',', ':'))
        headers = {'Content-Type': 'application/json'}
    else:
        payload = ""
        headers = {}
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å –¥–ª—è –≠–¢–û–ì–û –ö–û–ù–ö–†–ï–¢–ù–û–ì–û –∑–∞–ø—Ä–æ—Å–∞
    signature = generate_signature(payload, SHARED_KEY)
    headers['X-Signature'] = signature
    
    print(f"üöÄ –ó–∞–ø—Ä–æ—Å: {method} {endpoint}")
    print(f"üìù Payload: {payload}")
    print(f"üîê –ü–æ–¥–ø–∏—Å—å: {signature}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    url = f"http://localhost:5000{endpoint}"
    if method == "GET":
        response = requests.get(url, headers=headers)
    else:
        response = requests.post(url, data=payload, headers=headers)
    
    print(f"üì• –û—Ç–≤–µ—Ç: {response.status_code}")
    return response

# –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–∑–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–æ–¥–ø–∏—Å—è–º–∏:

print("=" * 50)
print("–ü–†–ò–ú–ï–† 1: GET –∑–∞–ø—Ä–æ—Å (–ø—É—Å—Ç–æ–π payload)")
print("=" * 50)
response1 = make_authenticated_request("/api/v1/batch-status/365a09ce-5416-49b5-8471-d6aad042761c")

print("\n" + "=" * 50)
print("–ü–†–ò–ú–ï–† 2: POST –∑–∞–ø—Ä–æ—Å —Å –¥–∞–Ω–Ω—ã–º–∏")
print("=" * 50)
test_data = {
    "lots": [
        {"lot_id": "test123", "images": ["http://example.com/car.jpg"]}
    ],
    "languages": ["en", "ru"]
}
response2 = make_authenticated_request("/api/v1/generate", "POST", test_data)

print("\n" + "=" * 50)
print("–ü–†–ò–ú–ï–† 3: –î—Ä—É–≥–æ–π GET –∑–∞–ø—Ä–æ—Å")
print("=" * 50)
response3 = make_authenticated_request("/api/v1/jobs/365a09ce-5416-49b5-8471-d6aad042761c")

print("\nüéØ –í–ê–ñ–ù–û:")
print("–ö–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å –∏–º–µ–µ—Ç –°–í–û–Æ —É–Ω–∏–∫–∞–ª—å–Ω—É—é –ø–æ–¥–ø–∏—Å—å!")
print("–ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–Ω—É –ø–æ–¥–ø–∏—Å—å –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤!")